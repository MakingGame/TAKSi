// This file is auto-generated by taxi v1.2.2, DO NOT EDIT!

using System;
using System.IO;
using System.Text;
using System.Linq;
using System.Collections;
using System.Collections.Generic;

namespace Config
{


// 兵种属性配置
public class SoldierPropertyDefine
{
    public string  Name = "";                 // 士兵ID
    public int     Level = 0;                 // 士兵等级
    public string  NameID = "";               // 名字
    public string  Description = "";          // 描述
    public string  BuildingName = "";         // 所属建筑
    public uint    BuildingLevel = 0;         // 建筑等级
    public uint    RequireSpace = 0;          // 登陆艇占用空间
    public uint    Volume = 0;                // 体积
    public uint    UpgradeTime = 0;           // 升级消耗的时间(秒）
    public string  UpgradeMaterialID = "";    // 升级消耗的材料
    public int     UpgradeMaterialNum = 0;    // 升级消耗的数量
    public string  ConsumeMaterial = "";      // 生产消耗的材料
    public int     ConsumeMaterialNum = 0;    // 生产消耗的数量
    public int     ConsumeTime = 0;           // 生产消耗的时间（秒/个）
    public int     Act = 0;                   // 攻击
    public int     Hp = 0;                    // 血量
    public int     BombLoad = 0;              // 载弹量
    public uint    Hurt = 0;                  // buff伤害
    public float   Duration = 0.0f;           // 持续时间
    public float   TriggerInterval = 0.0f;    // 触发间隔
    public float   SearchScope = 0.0f;        // 搜索范围
    public float   AtkFrequency = 0.0f;       // 攻击间隔
    public float   AtkRange = 0.0f;           // 攻击距离
    public float   MovingSpeed = 0.0f;        // 移动速度

    private static List<SoldierPropertyDefine> data_ = new List<SoldierPropertyDefine>(); // 兵种属性配置

    public static List<SoldierPropertyDefine> GetData() {
        return data_;
    }

    // parse data object from an csv row
    public static SoldierPropertyDefine ParseFromRow(IList<string> row) {
        if (row.Count < 24) {
            throw new ArgumentException(string.Format("SoldierPropertyDefine: row length out of index {0}", row.Count));
        }
        SoldierPropertyDefine obj = new SoldierPropertyDefine();
        if (row[0] != "") {
            obj.Name = row[0].Trim();
        }
        if (row[1] != "") {
            obj.Level = int.Parse(row[1]);
        }
        if (row[2] != "") {
            obj.NameID = row[2].Trim();
        }
        if (row[3] != "") {
            obj.Description = row[3].Trim();
        }
        if (row[4] != "") {
            obj.BuildingName = row[4].Trim();
        }
        if (row[5] != "") {
            obj.BuildingLevel = uint.Parse(row[5]);
        }
        if (row[6] != "") {
            obj.RequireSpace = uint.Parse(row[6]);
        }
        if (row[7] != "") {
            obj.Volume = uint.Parse(row[7]);
        }
        if (row[8] != "") {
            obj.UpgradeTime = uint.Parse(row[8]);
        }
        if (row[9] != "") {
            obj.UpgradeMaterialID = row[9].Trim();
        }
        if (row[10] != "") {
            obj.UpgradeMaterialNum = int.Parse(row[10]);
        }
        if (row[11] != "") {
            obj.ConsumeMaterial = row[11].Trim();
        }
        if (row[12] != "") {
            obj.ConsumeMaterialNum = int.Parse(row[12]);
        }
        if (row[13] != "") {
            obj.ConsumeTime = int.Parse(row[13]);
        }
        if (row[14] != "") {
            obj.Act = int.Parse(row[14]);
        }
        if (row[15] != "") {
            obj.Hp = int.Parse(row[15]);
        }
        if (row[16] != "") {
            obj.BombLoad = int.Parse(row[16]);
        }
        if (row[17] != "") {
            obj.Hurt = uint.Parse(row[17]);
        }
        if (row[18] != "") {
            obj.Duration = float.Parse(row[18]);
        }
        if (row[19] != "") {
            obj.TriggerInterval = float.Parse(row[19]);
        }
        if (row[20] != "") {
            obj.SearchScope = float.Parse(row[20]);
        }
        if (row[21] != "") {
            obj.AtkFrequency = float.Parse(row[21]);
        }
        if (row[22] != "") {
            obj.AtkRange = float.Parse(row[22]);
        }
        if (row[23] != "") {
            obj.MovingSpeed = float.Parse(row[23]);
        }
        return obj;
    }

    public static void Load() {
        data_ = new List<SoldierPropertyDefine>();
        string csvpath = ResourceManager.PersistentDataPath + @"csv/soldierpropertydefine.csv";
        string[] lines = File.ReadAllLines(csvpath, Encoding.UTF8);
        foreach(string line in lines)
        {
            string[] row = line.Split(',');
            var obj = SoldierPropertyDefine.ParseFromRow(row);
            data_.Add(obj);
        }
    }

    // get an items by key
    SoldierPropertyDefine Get(string Name, int Level)
    {
        foreach (SoldierPropertyDefine item in GetData())
        {
            if (item.Name == Name && item.Level == Level)
            {
                return item;
            }
        }
        return null;
    }

    // get a range of items by key
    List<SoldierPropertyDefine> GetRange(string Name)
    {
        List<SoldierPropertyDefine> range;
        foreach (SoldierPropertyDefine item in GetData())
        {
            if (data.Name == Name)
            {
                range.Add(item);
            }
            else 
            {
                if (!range.empty()) 
                    break;
            }
        }
        return range;
    }

}

public class AutogenConfigData
{
    public static bool LoadAll() 
    {
        SoldierPropertyDefine.Load();
        return true;
    }

    public static bool ParseBoolean(string text)
    {
        text = text.Trim().ToLower();
        return text == "1" || text == "true" || text == "yes" || text == "on";
    }
}


}
