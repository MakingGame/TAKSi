// This file is auto-generated by taxi v1.2.3. DO NOT EDIT!

package orm

import (
	"database/sql"
	"fatchoy/storage"
	"time"
)

// 角色信息
type Player struct {
	Uid                 uint64    `json:"uid"`                   // 角色唯一ID
	Account             string    `json:"account"`               // 玩家账号
	Name                string    `json:"name"`                  // 角色昵称
	Authority           uint16    `json:"authority"`             // 玩家权限
	Level               uint16    `json:"level"`                 // 角色等级
	VipLevel            uint32    `json:"vip_level"`             // VIP等级
	Exp                 uint32    `json:"exp"`                   // 经验
	Diamond             uint32    `json:"diamond"`               // 钻石数量
	Coin                uint32    `json:"coin"`                  // 货币
	StrengthPoint       uint32    `json:"strength_point"`        // 体力
	BirthDate           time.Time `json:"birth_date"`            // 角色创建日期
	RegisterIp          string    `json:"register_ip"`           // 注册IP
	BanExpire           int64     `json:"ban_expire"`            // 封禁到期时间
	IsBanned            bool      `json:"is_banned"`             // 是否被封禁
	ShieldExpire        int64     `json:"shield_expire"`         // 保护罩时间
	CurrentGuideChapter uint32    `json:"current_guide_chapter"` // 当前引导章节
}

const SqlPlayerStmt = "SELECT `uid`, `account`, `name`, `authority`, `level`, `vip_level`, `exp`, `diamond`, `coin`, `strength_point`, `birth_date`, `register_ip`, `ban_expire`, `is_banned`, `shield_expire`, `current_guide_chapter` FROM `player`"

func (p *Player) Load(rows *sql.Rows) error {
	return rows.Scan(&p.Uid, &p.Account, &p.Name, &p.Authority, &p.Level, &p.VipLevel, &p.Exp, &p.Diamond, &p.Coin, &p.StrengthPoint, &p.BirthDate, &p.RegisterIp, &p.BanExpire, &p.IsBanned, &p.ShieldExpire, &p.CurrentGuideChapter)
}

func (p *Player) InsertStmt() *storage.SqlOperation {
	return storage.NewSqlOperation("INSERT INTO `player`(`uid`, `account`, `name`, `authority`, `level`, `vip_level`, `exp`, `diamond`, `coin`, `strength_point`, `birth_date`, `register_ip`, `ban_expire`, `is_banned`, `shield_expire`, `current_guide_chapter`) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", p.Uid, p.Account, p.Name, p.Authority, p.Level, p.VipLevel, p.Exp, p.Diamond, p.Coin, p.StrengthPoint, p.BirthDate, p.RegisterIp, p.BanExpire, p.IsBanned, p.ShieldExpire, p.CurrentGuideChapter)
}

func (p *Player) UpdateStmt() *storage.SqlOperation {
	return storage.NewSqlOperation("UPDATE `player` SET `account`=?, `name`=?, `authority`=?, `level`=?, `vip_level`=?, `exp`=?, `diamond`=?, `coin`=?, `strength_point`=?, `birth_date`=?, `register_ip`=?, `ban_expire`=?, `is_banned`=?, `shield_expire`=?, `current_guide_chapter`=? WHERE `uid`=?", p.Account, p.Name, p.Authority, p.Level, p.VipLevel, p.Exp, p.Diamond, p.Coin, p.StrengthPoint, p.BirthDate, p.RegisterIp, p.BanExpire, p.IsBanned, p.ShieldExpire, p.CurrentGuideChapter, p.Uid)
}

func (p *Player) DeleteStmt() *storage.SqlOperation {
	return storage.NewSqlOperation("DELETE FROM `player` WHERE `uid`=?", p.Uid)
}
