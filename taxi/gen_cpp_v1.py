# Copyright (C) 2018-present ichenq@outlook.com. All rights reserved.
# Distributed under the terms and conditions of the Apache License.
# See accompanying files LICENSE.

import time
import unittest
import basegen
import util

# C++ code generator
class CppV1Generator(basegen.CodeGeneratorBase):

    def __init__(self):
        pass

    @staticmethod
    def name():
        return "cppv1"


    def gen_cpp_header(self, descriptors):
        h_include_headers = [
            '#include <stdint.h>',
            '#include <string>',
            '#include <vector>',
        ]
        header_content = '// This file is auto-generated by taxi v%s, DO NOT EDIT!\n\n#pragma once\n\n' % util.version_string
        header_content += '\n'.join(h_include_headers) + '\n\n'
        header_content += '// load all configurations\nvoid LoadAllAutogenConfig();\n\n'
        header_content += '// clear all configurations\nvoid ClearAllAutogenConfig();\n\n'


    def gen_cpp_source(self, descriptors):
        cpp_include_headers = [
            '#include "stdafx.h"',
            '#include <stddef.h>',
            '#include <memory>',
            '#include "AutogenConfig.h"',
            '#include "Utility/Conv.h"',
            '#include "Resource/ResourceManager.h"',
        ]
        cpp_content = '// This file is auto-generated by taxi v%s, DO NOT EDIT!\n\n' % util.version_string
        cpp_content += '\n'.join(cpp_include_headers) + '\n\n'
        cpp_content += 'using namespace std;\n\n'


    def generate(self, descriptors):
        pass


    def run(self, args):
        pass